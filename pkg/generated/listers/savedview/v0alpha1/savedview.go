// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by lister-gen. DO NOT EDIT.

package v0alpha1

import (
	v0alpha1 "github.com/grafana/grafana/pkg/apis/savedview/v0alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SavedViewLister helps list SavedViews.
// All objects returned here must be treated as read-only.
type SavedViewLister interface {
	// List lists all SavedViews in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v0alpha1.SavedView, err error)
	// SavedViews returns an object that can list and get SavedViews.
	SavedViews(namespace string) SavedViewNamespaceLister
	SavedViewListerExpansion
}

// savedViewLister implements the SavedViewLister interface.
type savedViewLister struct {
	indexer cache.Indexer
}

// NewSavedViewLister returns a new SavedViewLister.
func NewSavedViewLister(indexer cache.Indexer) SavedViewLister {
	return &savedViewLister{indexer: indexer}
}

// List lists all SavedViews in the indexer.
func (s *savedViewLister) List(selector labels.Selector) (ret []*v0alpha1.SavedView, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v0alpha1.SavedView))
	})
	return ret, err
}

// SavedViews returns an object that can list and get SavedViews.
func (s *savedViewLister) SavedViews(namespace string) SavedViewNamespaceLister {
	return savedViewNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SavedViewNamespaceLister helps list and get SavedViews.
// All objects returned here must be treated as read-only.
type SavedViewNamespaceLister interface {
	// List lists all SavedViews in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v0alpha1.SavedView, err error)
	// Get retrieves the SavedView from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v0alpha1.SavedView, error)
	SavedViewNamespaceListerExpansion
}

// savedViewNamespaceLister implements the SavedViewNamespaceLister
// interface.
type savedViewNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SavedViews in the indexer for a given namespace.
func (s savedViewNamespaceLister) List(selector labels.Selector) (ret []*v0alpha1.SavedView, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v0alpha1.SavedView))
	})
	return ret, err
}

// Get retrieves the SavedView from the indexer for a given namespace and name.
func (s savedViewNamespaceLister) Get(name string) (*v0alpha1.SavedView, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v0alpha1.Resource("savedview"), name)
	}
	return obj.(*v0alpha1.SavedView), nil
}
