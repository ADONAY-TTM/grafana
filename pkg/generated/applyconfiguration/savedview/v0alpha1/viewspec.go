// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

// ViewSpecApplyConfiguration represents an declarative configuration of the ViewSpec type for use
// with apply.
type ViewSpecApplyConfiguration struct {
	Name        *string `json:"name,omitempty"`
	URL         *string `json:"url,omitempty"`
	Description *string `json:"description,omitempty"`
	Icon        *string `json:"icon,omitempty"`
	Meta        *string `json:"meta,omitempty"`
}

// ViewSpecApplyConfiguration constructs an declarative configuration of the ViewSpec type for use with
// apply.
func ViewSpec() *ViewSpecApplyConfiguration {
	return &ViewSpecApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ViewSpecApplyConfiguration) WithName(value string) *ViewSpecApplyConfiguration {
	b.Name = &value
	return b
}

// WithURL sets the URL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URL field is set to the value of the last call.
func (b *ViewSpecApplyConfiguration) WithURL(value string) *ViewSpecApplyConfiguration {
	b.URL = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *ViewSpecApplyConfiguration) WithDescription(value string) *ViewSpecApplyConfiguration {
	b.Description = &value
	return b
}

// WithIcon sets the Icon field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Icon field is set to the value of the last call.
func (b *ViewSpecApplyConfiguration) WithIcon(value string) *ViewSpecApplyConfiguration {
	b.Icon = &value
	return b
}

// WithMeta sets the Meta field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Meta field is set to the value of the last call.
func (b *ViewSpecApplyConfiguration) WithMeta(value string) *ViewSpecApplyConfiguration {
	b.Meta = &value
	return b
}
